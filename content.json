[{"title":"杂谈javascript之二","date":"2016-12-21T13:08:05.030Z","path":"2016/12/21/JavaScript杂谈之二/","text":"javascript中的函数今天看到了JavaScript中的函数篇，很熟悉的名称：函数，重读一遍后又收获了一些新知识12345678parseInt(&apos;123&apos;);parseInt(&apos;abc123&apos;);parseInt(&apos;1abc23&apos;);parseInt(&apos;123abc&apos;);parseInt(&apos;FF&apos;,10);parseInt(&apos;FF&apos;,16);parseInt(&apos;0377&apos;);parseInt(&apos;0x377&apos;); 以上函数分别输出123，NaN，1,123,NaN,255,255,887；是不是发现自己猜想的结果与实际输出悬殊比较大？如果自己的结果错了，那请记住这些，避免下次再犯这种错误。 在地址栏传参数时，可能会有中文乱码的情况，这时请参考使用12encodeURIComponent(url);decodeURIComponent(url); 回调函数的应用：先来看一段代码12345678910111213141516171819function multi(a,b,c) &#123; var i,ar = []; for(i = 0; i &lt; 3; i++) &#123; ar[i] = arguments[i] * 2; &#125; return ar;&#125;function addOne(a) &#123; return a + 1;&#125;var myarr = [];myarr = multi(10, 20, 30);for (var i = 0; i &lt; 3 ; i++) &#123; myarr[i] = addOne(myarr[i]);&#125;alert(myarr); 你会发现这段代码的数据量比较大，同时循环操作复杂，所以我们换一下，改用回调函数，请看下面的代码： 123456789function multi(a,b,c,callback) &#123; var i,ar = []; for(i = 0; i &lt; 3; i++) &#123; ar[i] = callback(arguments[i] * 2); &#125; return ar;&#125;var myarr = [];myarr = multi(1, 2, 3, addOne); 再次优化一下:123multi(a,b,c,function (a) &#123; return a + 1;&#125;) 即时函数，就是一打开html它就会自动的调用，这种函数有以下几个 1234567891011window.onload = function()&#123;&#125;$(function()&#123;&#125;)(function()&#123;&#125;)()","tags":[]},{"title":"杂谈javascript之一","date":"2016-12-20T13:35:27.055Z","path":"2016/12/20/JavaScript杂谈之一/","text":"javascript中的基本数据类型及部分操作重新看了javascript，发现了一些平时不被关注的小问题，现在分享出来，大家一起看看12var n = 0377;alert(n); 看到这段代码，你认为它将输出什么？0377吗？如果是0377，那么恭喜你，回答错误！你可以在浏览器上的控制台敲一下试试，你会发现它的输出并不是0377，而是255，为什么是255呢？因为当数字以0开头时代表这个数是八进制数，如果以0x开头，则这个数代表十六进制，例如：0xff；123var a = 1e1;var b = 1e+1;var c = 2e+3; 请读者自己运行试试会输出怎样的结果，好吧，我也不卖关子了，这几个表达式代表的是javascript中的指数表达式，意思是在某个数后加几个0，比如2e+3指的就是在2后面加3个0，或者也可以理解为将数字2的小数点向右移动3位在javascript中有一个叫做Infinity的特殊值，它代表的是超过了JavaScript处理范围的值，当输入1e308时，正常，但是只要你输入了1e309就出界了，另外任何数除以0结果仍是Infinity，可以在console中运行一下语句123456Infinity;typeof Infinity;1e308;1e309;var a = 6/0;alert(a); Infinity与其它任何操作数执行算术运算的结果都等于Infinity；在javascript中，数字字符串转换为数字有一种偷懒的方法：将该字符串与1相乘即可,当然，更好的方法是调用parseInt()函数；例如：1234var n = &apos;1&apos;;typeof n;n = n*1;typeof n; 接下来看看JavaScript的数组：12var a = [1,2,3];a[6] = &apos;new&apos;; 以上代码将会在下标2到5之间产生3个undefined如果执行以下代码：12var a = [1,2,3];delete a[1]; 删除特定的元素数组长度不会受到影响，只是被删除的位置被留空了1234567var a = 1;var result = &apos;&apos;;if (a==1) &#123; result = &quot;a is one&quot;;&#125; else &#123; result = &quot;a is not one&quot;;&#125; 看完以上代码再来看看下面的代码：12var a = 1;var result = (a == 1) ? &quot;a is one&quot; : &quot;a is not one&quot;; 是不是感觉第二种方式好简洁，所以在写一些简单的条件表达式可以使用其它形式代替if表达式，但是只限于一些非常简单的条件逻辑，如果在if表达式中使用了太多的else if 字句，请考虑使用switch语句来替代if12345var a = [&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;x&apos;,&apos;y&apos;,&apos;z&apos;];var result = &apos;\\n&apos;;for (var i in a) &#123; result += &apos;index: &apos; + i + &apos;, value: &apos; + a[i] + &apos;\\n&apos;;&#125; JavaScript回忆一JavaScript中有五大基本数据类型：number;string;boolean;undefined;null;任何不属于基本数据类型的东西都属于对象；数组是一种数据存储形式，数组能存储任何类型的数组，包括另一个数组","tags":[]},{"title":"angularJs学习之条件化显示","date":"2016-12-20T11:05:16.495Z","path":"2016/12/20/angularJs学习之条件化显示/","text":"今天看到了angularJS介绍的条件化显示,在angularJs中拥有四套不同的指令集:ng-show/ng-hide,ng-swatch-*,ng-if,ng-include. ng-show/ng-hideng-show与ng-hide用于隐藏DOM树的一部分,它利用的是CSS规则,类似于CSS中的1style:&quot;display: none;&quot; 它并没有将元素从DOM树中移除。 ng-switchng-switch会根据条件来移除DOM节点,请注意,这里指的是“移除”,而不是“隐藏”1234&lt;div ng-switch on=&quot;showSecret&quot;&gt;&lt;div ng-switch-when=&quot;true&quot;&gt;Secret&lt;/div&gt;&lt;div ng-switch-default&gt;Won&apos;t show you my secrets!&lt;/div&gt;&lt;/div&gt; 在这个例子中,ng-switch将会监听on里面的值,只要匹配了ng-switch-when就可以将其加入进来,否则将其移除,在一个ng-switch中可以有多个ng-switch-when,ng-switch有一个问题:如果是简单用例,语法也会变得冗长,此时就需要一套新的指令集了:ng-if ng-ifng-if语法十分简单,例如:1&lt;div ng-if=&quot;showSecret&quot;&gt;&lt;/div&gt; 条件化显示的小demohtml:1234567891011&lt;table class=&quot;table table=bordered&quot; ng-controller=&quot;ListAndOneDetailCtrl&quot;&gt; &lt;tbody ng-repeat=&quot;user in users&quot; ng-click=&quot;selectUser(user)&quot; ng-switch on=&quot;isSelected(user)&quot;&gt; &lt;tr&gt; &lt;td&gt;&#123;&#123;user.name&#125;&#125;&lt;/td&gt; &lt;td&gt;&#123;&#123;user.email&#125;&#125;&lt;/td&gt; &lt;/tr&gt; &lt;tr ng-switch-when=&quot;true&quot;&gt; &lt;td colspan=&quot;2&quot;&gt;&#123;&#123;user.desc&#125;&#125;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; js:12345678910111213angular.module(&apos;Myapp&apos;,[]).controller(&apos;ListAndOneDetailCtrl&apos;,function ($scope) &#123; $scope.users = [&#123;&quot;name&quot;:&quot;pawel&quot;,&quot;email&quot;:&quot;pawel@qq.com&quot;,&quot;desc&quot;:&quot;Pawel details go here&quot;&#125;, &#123;&quot;name&quot;:&quot;peter&quot;,&quot;email&quot;:&quot;perter@qq.com&quot;,&quot;desc&quot;:&quot;peter details go here&quot;&#125;]; $scope.selectUser = function (user) &#123; $scope.selectedUser = user; &#125; $scope.isSelected = function (user) &#123; return $scope.selectedUser == user; &#125;&#125;); 条件化显示可以有条件地加载和显示子模板,容易创建高度动态化的页面,所以学会以上几个指令对自己的帮助还是挺大的","tags":[]},{"title":"博客开张啦","date":"2016-12-19T13:31:27.385Z","path":"2016/12/19/我的第一个博客-开篇/","text":"欢迎来到我的博客,从今天起我将开始更新,希望在这里能找到你想要的,同时分享我的各种Idea 第一篇 简介我是一个程序猿,还是一个刚进入这个专业没多久的菜鸟,但是我喜欢技术,喜欢看到代码在我手下产生各种美妙的画面,我还在学习,我也会一直学习,这个博客我会分享出一些我的见解以及一些解决困难的方法,未来还长,请多多指教!","tags":[]},{"title":"林之博客","date":"2016-12-19T06:23:05.893Z","path":"2016/12/19/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]